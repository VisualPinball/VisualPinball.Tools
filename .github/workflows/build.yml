name: Build
on: [ push, pull_request ]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build ${{ matrix.app }}-${{ matrix.rid }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { app: VisualPinball.MaterialPatcher, os: windows-latest, rid: win-x64, ext: .exe }
          - { app: VisualPinball.MaterialPatcher, os: windows-latest, rid: win-x86, ext: .exe }
          - { app: VisualPinball.MaterialPatcher, os: macos-latest, rid: osx-x64 }
          - { app: VisualPinball.MaterialPatcher, os: ubuntu-18.04, rid: linux-x64 }
          - { app: VisualPinball.TableScript, os: windows-latest, rid: win-x64, ext: .exe }
          - { app: VisualPinball.TableScript, os: windows-latest, rid: win-x86, ext: .exe }
          - { app: VisualPinball.TableScript, os: macos-latest, rid: osx-x64 }
          - { app: VisualPinball.TableScript, os: ubuntu-18.04, rid: linux-x64 }
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Build ${{ matrix.app }}-${{ matrix.rid }}
        run: |
          cd ${{ matrix.app }}
          dotnet publish -r ${{ matrix.rid }} -c Release -p:PublishSingleFile=true -p:PublishTrimmed=true
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.app }}-${{ matrix.rid }}
          path: ${{ matrix.app }}/bin/Release/netcoreapp3.1/${{ matrix.rid }}/publish/${{ matrix.app }}${{ matrix.ext }}
